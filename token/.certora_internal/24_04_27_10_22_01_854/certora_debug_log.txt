Saving last configuration file to .certora_internal/24_04_27_10_22_01_854/run.conf
There is no TAC file. Going to script EVMVerifier/certoraBuild.py to main_with_args()
Creating dir /home/shan/my_project/test-audits/token/.certora_internal/24_04_27_10_22_01_854/.certora_config
In /home/shan/my_project/test-audits/token/ERC20.spec, found the imports: []
copying spec file /home/shan/my_project/test-audits/token/ERC20.spec to /home/shan/my_project/test-audits/token/.certora_internal/24_04_27_10_22_01_854/.certora_sources/.0_ERC20.spec.spec
writing /home/shan/my_project/test-audits/token/.certora_internal/24_04_27_10_22_01_854/.certora_verify.json
Path to typechecker is /home/shan/.local/lib/python3.10/site-packages/certora_jars/Typechecker.jar
running ['java', '-jar', '/home/shan/.local/lib/python3.10/site-packages/certora_jars/Typechecker.jar', '-buildDirectory', '/home/shan/my_project/test-audits/token/.certora_internal/24_04_27_10_22_01_854']

building file ERC20.sol
Running cmd solc -o ".certora_internal/24_04_27_10_22_01_854/.certora_config/ERC20.sol_0/" --overwrite --allow-paths "/home/shan/my_project/test-audits/token",. --standard-json
stdout, stderr = .certora_internal/24_04_27_10_22_01_854/.certora_config/ERC20.sol_0.standard.json.stdout, .certora_internal/24_04_27_10_22_01_854/.certora_config/ERC20.sol_0.standard.json.stderr
Exitcode 0
Solc run solc -o ".certora_internal/24_04_27_10_22_01_854/.certora_config/ERC20.sol_0/" --overwrite --allow-paths "/home/shan/my_project/test-audits/token",. --standard-json time: 1.4959
reading standard json data from .certora_internal/24_04_27_10_22_01_854/.certora_config/ERC20.sol_0.standard.json.stdout
Running cmd solc --version
stdout, stderr = .certora_internal/24_04_27_10_22_01_854/.certora_config/version_check_solc.stdout, .certora_internal/24_04_27_10_22_01_854/.certora_config/version_check_solc.stderr
Exitcode 0
Solc run solc --version time: 0.3402
collecting worklist for /home/shan/my_project/test-audits/token/ERC20.sol
Processing dependencies from file /home/shan/my_project/test-audits/token/ERC20.sol
available keys: dict_keys(['/home/shan/my_project/test-audits/token/ERC20.sol', '/home/shan/my_project/test-audits/token/IERC20.sol', '/home/shan/my_project/test-audits/token/IERC20Metadata.sol'])
Adding a base contract link ref /home/shan/my_project/test-audits/token/IERC20.sol to worklist
Adding a base contract link ref /home/shan/my_project/test-audits/token/IERC20Metadata.sol to worklist
Processing dependencies from file /home/shan/my_project/test-audits/token/IERC20Metadata.sol
available keys: dict_keys(['/home/shan/my_project/test-audits/token/ERC20.sol', '/home/shan/my_project/test-audits/token/IERC20.sol', '/home/shan/my_project/test-audits/token/IERC20Metadata.sol'])
Processing dependencies from file /home/shan/my_project/test-audits/token/IERC20.sol
available keys: dict_keys(['/home/shan/my_project/test-audits/token/ERC20.sol', '/home/shan/my_project/test-audits/token/IERC20.sol', '/home/shan/my_project/test-audits/token/IERC20Metadata.sol'])
Contracts in ERC20.sol_0 (file ERC20.sol): ['ERC20']
Contracts with their chosen addresses: [(274184521717934524641157099916833587200, '/home/shan/my_project/test-audits/token/ERC20.sol:ERC20'), (274184521717934524641157099916833587201, '/home/shan/my_project/test-audits/token/IERC20.sol:IERC20'), (274184521717934524641157099916833587202, '/home/shan/my_project/test-audits/token/IERC20Metadata.sol:IERC20Metadata')]
Working on contract ERC20
build failed
Failure traceback: 
CertoraUserInputError: Contract ERC20 has no bytecode. It may be caused because the contract is abstract, or is missing constructor code. Please check the output of the Solidity compiler.
Encountered an error running Certora Prover:
Contract ERC20 has no bytecode. It may be caused because the contract is abstract, or is missing constructor code. Please check the output of the Solidity compiler.
